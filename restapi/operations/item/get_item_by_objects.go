// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetItemByObjectsHandlerFunc turns a function with the right signature into a get item by objects handler
type GetItemByObjectsHandlerFunc func(GetItemByObjectsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetItemByObjectsHandlerFunc) Handle(params GetItemByObjectsParams) middleware.Responder {
	return fn(params)
}

// GetItemByObjectsHandler interface for that can handle valid get item by objects params
type GetItemByObjectsHandler interface {
	Handle(GetItemByObjectsParams) middleware.Responder
}

// NewGetItemByObjects creates a new http.Handler for the get item by objects operation
func NewGetItemByObjects(ctx *middleware.Context, handler GetItemByObjectsHandler) *GetItemByObjects {
	return &GetItemByObjects{Context: ctx, Handler: handler}
}

/* GetItemByObjects swagger:route POST /item_by_objects item getItemByObjects

Get items by objects

*/
type GetItemByObjects struct {
	Context *middleware.Context
	Handler GetItemByObjectsHandler
}

func (o *GetItemByObjects) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetItemByObjectsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
