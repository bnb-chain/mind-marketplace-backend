// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bnb-chain/mind-marketplace-backend/models"
)

// GetItemByBucketOKCode is the HTTP code returned for type GetItemByBucketOK
const GetItemByBucketOKCode int = 200

/*GetItemByBucketOK successful operation

swagger:response getItemByBucketOK
*/
type GetItemByBucketOK struct {

	/*
	  In: Body
	*/
	Payload *models.ItemResponse `json:"body,omitempty"`
}

// NewGetItemByBucketOK creates GetItemByBucketOK with default headers values
func NewGetItemByBucketOK() *GetItemByBucketOK {

	return &GetItemByBucketOK{}
}

// WithPayload adds the payload to the get item by bucket o k response
func (o *GetItemByBucketOK) WithPayload(payload *models.ItemResponse) *GetItemByBucketOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item by bucket o k response
func (o *GetItemByBucketOK) SetPayload(payload *models.ItemResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemByBucketOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemByBucketBadRequestCode is the HTTP code returned for type GetItemByBucketBadRequest
const GetItemByBucketBadRequestCode int = 400

/*GetItemByBucketBadRequest Bad Request

swagger:response getItemByBucketBadRequest
*/
type GetItemByBucketBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemByBucketBadRequest creates GetItemByBucketBadRequest with default headers values
func NewGetItemByBucketBadRequest() *GetItemByBucketBadRequest {

	return &GetItemByBucketBadRequest{}
}

// WithPayload adds the payload to the get item by bucket bad request response
func (o *GetItemByBucketBadRequest) WithPayload(payload *models.Error) *GetItemByBucketBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item by bucket bad request response
func (o *GetItemByBucketBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemByBucketBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemByBucketInternalServerErrorCode is the HTTP code returned for type GetItemByBucketInternalServerError
const GetItemByBucketInternalServerErrorCode int = 500

/*GetItemByBucketInternalServerError internal server error

swagger:response getItemByBucketInternalServerError
*/
type GetItemByBucketInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemByBucketInternalServerError creates GetItemByBucketInternalServerError with default headers values
func NewGetItemByBucketInternalServerError() *GetItemByBucketInternalServerError {

	return &GetItemByBucketInternalServerError{}
}

// WithPayload adds the payload to the get item by bucket internal server error response
func (o *GetItemByBucketInternalServerError) WithPayload(payload *models.Error) *GetItemByBucketInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item by bucket internal server error response
func (o *GetItemByBucketInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemByBucketInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
