// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bnb-chain/mind-marketplace-backend/models"
)

// GetItemByObjectOKCode is the HTTP code returned for type GetItemByObjectOK
const GetItemByObjectOKCode int = 200

/*GetItemByObjectOK successful operation

swagger:response getItemByObjectOK
*/
type GetItemByObjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.ItemResponse `json:"body,omitempty"`
}

// NewGetItemByObjectOK creates GetItemByObjectOK with default headers values
func NewGetItemByObjectOK() *GetItemByObjectOK {

	return &GetItemByObjectOK{}
}

// WithPayload adds the payload to the get item by object o k response
func (o *GetItemByObjectOK) WithPayload(payload *models.ItemResponse) *GetItemByObjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item by object o k response
func (o *GetItemByObjectOK) SetPayload(payload *models.ItemResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemByObjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemByObjectBadRequestCode is the HTTP code returned for type GetItemByObjectBadRequest
const GetItemByObjectBadRequestCode int = 400

/*GetItemByObjectBadRequest Bad Request

swagger:response getItemByObjectBadRequest
*/
type GetItemByObjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemByObjectBadRequest creates GetItemByObjectBadRequest with default headers values
func NewGetItemByObjectBadRequest() *GetItemByObjectBadRequest {

	return &GetItemByObjectBadRequest{}
}

// WithPayload adds the payload to the get item by object bad request response
func (o *GetItemByObjectBadRequest) WithPayload(payload *models.Error) *GetItemByObjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item by object bad request response
func (o *GetItemByObjectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemByObjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemByObjectInternalServerErrorCode is the HTTP code returned for type GetItemByObjectInternalServerError
const GetItemByObjectInternalServerErrorCode int = 500

/*GetItemByObjectInternalServerError internal server error

swagger:response getItemByObjectInternalServerError
*/
type GetItemByObjectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemByObjectInternalServerError creates GetItemByObjectInternalServerError with default headers values
func NewGetItemByObjectInternalServerError() *GetItemByObjectInternalServerError {

	return &GetItemByObjectInternalServerError{}
}

// WithPayload adds the payload to the get item by object internal server error response
func (o *GetItemByObjectInternalServerError) WithPayload(payload *models.Error) *GetItemByObjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item by object internal server error response
func (o *GetItemByObjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemByObjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
