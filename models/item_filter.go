// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ItemFilter item filter
//
// swagger:model ItemFilter
type ItemFilter struct {

	// account address
	// Example: 0x0BAC492386862aD3dF4B666Bc096b0505BB694Da
	// Min Length: 1
	Address string `json:"address,omitempty"`

	// search keyword
	// Example: panda
	// Min Length: 1
	Keyword string `json:"keyword,omitempty"`
}

// Validate validates this item filter
func (m *ItemFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKeyword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ItemFilter) validateAddress(formats strfmt.Registry) error {
	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if err := validate.MinLength("address", "body", m.Address, 1); err != nil {
		return err
	}

	return nil
}

func (m *ItemFilter) validateKeyword(formats strfmt.Registry) error {
	if swag.IsZero(m.Keyword) { // not required
		return nil
	}

	if err := validate.MinLength("keyword", "body", m.Keyword, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this item filter based on context it is used
func (m *ItemFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ItemFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ItemFilter) UnmarshalBinary(b []byte) error {
	var res ItemFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
