// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PurchaseFilter purchase filter
//
// swagger:model PurchaseFilter
type PurchaseFilter struct {

	// account address
	// Example: 0x0BAC492386862aD3dF4B666Bc096b0505BB694Da
	// Min Length: 1
	Address string `json:"address,omitempty"`

	// bucket id, the priority itemId > bucketId > objectId
	// Example: 100
	BucketID int64 `json:"bucketId,omitempty"`

	// item id, the priority itemId > bucketId > objectId
	// Example: 100
	ItemID int64 `json:"itemId,omitempty"`

	// object id, the priority itemId > bucketId > objectId
	// Example: 100
	ObjectID int64 `json:"objectId,omitempty"`
}

// Validate validates this purchase filter
func (m *PurchaseFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PurchaseFilter) validateAddress(formats strfmt.Registry) error {
	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if err := validate.MinLength("address", "body", m.Address, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this purchase filter based on context it is used
func (m *PurchaseFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PurchaseFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PurchaseFilter) UnmarshalBinary(b []byte) error {
	var res PurchaseFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
