// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetItemByObjectHandlerFunc turns a function with the right signature into a get item by object handler
type GetItemByObjectHandlerFunc func(GetItemByObjectParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetItemByObjectHandlerFunc) Handle(params GetItemByObjectParams) middleware.Responder {
	return fn(params)
}

// GetItemByObjectHandler interface for that can handle valid get item by object params
type GetItemByObjectHandler interface {
	Handle(GetItemByObjectParams) middleware.Responder
}

// NewGetItemByObject creates a new http.Handler for the get item by object operation
func NewGetItemByObject(ctx *middleware.Context, handler GetItemByObjectHandler) *GetItemByObject {
	return &GetItemByObject{Context: ctx, Handler: handler}
}

/* GetItemByObject swagger:route GET /item_by_object/{objectId} item getItemByObject

Get item by object

*/
type GetItemByObject struct {
	Context *middleware.Context
	Handler GetItemByObjectHandler
}

func (o *GetItemByObject) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetItemByObjectParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
