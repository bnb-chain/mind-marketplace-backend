// Code generated by go-swagger; DO NOT EDIT.

package purchase

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bnb-chain/greenfield-data-marketplace-backend/models"
)

// SearchPurchaseOKCode is the HTTP code returned for type SearchPurchaseOK
const SearchPurchaseOKCode int = 200

/*SearchPurchaseOK successful operation

swagger:response searchPurchaseOK
*/
type SearchPurchaseOK struct {

	/*
	  In: Body
	*/
	Payload *models.PagePurchaseResponse `json:"body,omitempty"`
}

// NewSearchPurchaseOK creates SearchPurchaseOK with default headers values
func NewSearchPurchaseOK() *SearchPurchaseOK {

	return &SearchPurchaseOK{}
}

// WithPayload adds the payload to the search purchase o k response
func (o *SearchPurchaseOK) WithPayload(payload *models.PagePurchaseResponse) *SearchPurchaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search purchase o k response
func (o *SearchPurchaseOK) SetPayload(payload *models.PagePurchaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPurchaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchPurchaseBadRequestCode is the HTTP code returned for type SearchPurchaseBadRequest
const SearchPurchaseBadRequestCode int = 400

/*SearchPurchaseBadRequest Bad Request

swagger:response searchPurchaseBadRequest
*/
type SearchPurchaseBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSearchPurchaseBadRequest creates SearchPurchaseBadRequest with default headers values
func NewSearchPurchaseBadRequest() *SearchPurchaseBadRequest {

	return &SearchPurchaseBadRequest{}
}

// WithPayload adds the payload to the search purchase bad request response
func (o *SearchPurchaseBadRequest) WithPayload(payload *models.Error) *SearchPurchaseBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search purchase bad request response
func (o *SearchPurchaseBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPurchaseBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchPurchaseInternalServerErrorCode is the HTTP code returned for type SearchPurchaseInternalServerError
const SearchPurchaseInternalServerErrorCode int = 500

/*SearchPurchaseInternalServerError internal server error

swagger:response searchPurchaseInternalServerError
*/
type SearchPurchaseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSearchPurchaseInternalServerError creates SearchPurchaseInternalServerError with default headers values
func NewSearchPurchaseInternalServerError() *SearchPurchaseInternalServerError {

	return &SearchPurchaseInternalServerError{}
}

// WithPayload adds the payload to the search purchase internal server error response
func (o *SearchPurchaseInternalServerError) WithPayload(payload *models.Error) *SearchPurchaseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search purchase internal server error response
func (o *SearchPurchaseInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPurchaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
